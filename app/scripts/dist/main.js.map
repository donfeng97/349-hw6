{
    "version": 3,
    "sources": [
        "ws-client.js",
        "app.js",
        "main.js"
    ],
    "names": [
        "socket",
        "init",
        "url",
        "WebSocket",
        "console",
        "log",
        "registerOpenHandler",
        "handlerFunction",
        "onopen",
        "registerMessageHandler",
        "onmessage",
        "e",
        "data",
        "JSON",
        "parse",
        "sendMessage",
        "payload",
        "send",
        "stringify",
        "ChatApp",
        "message",
        "ChatMessage",
        "toObj",
        "username",
        "user",
        "timestamp",
        "Date",
        "getTime"
    ],
    "mappings": ";AA0Be,aA1Bf,IAAIA,EAEJ,SAASC,EAAKC,GACZF,EAAS,IAAIG,UAAUD,GACvBE,QAAQC,IAAI,iBAGd,SAASC,EAAoBC,GAC3BP,EAAOQ,OAAS,WACdJ,QAAQC,IAAI,QACZE,KAIJ,SAASE,EAAuBF,GAC9BP,EAAOU,UAAY,SAACC,GAClBP,QAAQC,IAAI,UAAWM,EAAEC,MACrBA,IAAAA,EAAOC,KAAKC,MAAMH,EAAEC,MACxBL,EAAgBK,IAIpB,SAASG,EAAYC,GACnBhB,EAAOiB,KAAKJ,KAAKK,UAAUF,IAGd,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbf,KAAAA,EACAK,oBAAAA,EACAG,uBAAAA,EACAM,YAAAA,GAJa,QAAA,QAAA;;ACUAI,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EApCf,IAAA,EAAA,EAAA,QAAA,gBAoCeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAlCTA,IAAAA,EACJ,SAAc,IAAA,EAAA,KAAA,GACLlB,EAAAA,QAAAA,KAAK,uBACLK,EAAAA,QAAAA,oBAAoB,WACrBc,IAAAA,EAAU,IAAIC,EAAY,QACvBN,EAAAA,QAAAA,YAAYK,EAAQE,WAEtBb,EAAAA,QAAAA,uBAAuB,SAACG,GAC7BR,QAAQC,IAAIO,MAKZS,EAAAA,WACQT,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACI,iBAATA,IACTA,EAAO,CACLQ,QAASR,IAGRW,KAAAA,SAAWX,EAAKY,MAAQ,SACxBJ,KAAAA,QAAUR,EAAKQ,QACfK,KAAAA,UAAYb,EAAKa,YAAc,IAAIC,MAAQC,UAYrCR,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,QATL,MAAA,WACC,MAAA,CACLK,KAAM,KAAKD,SACXH,QAAS,KAAKA,QACdK,UAAW,KAAKA,eAKPN,EArBTE,GAqBSF,EAAAA,EAAAA,QAAAA,QAAAA;;ACnCf,aADA,IAAA,EAAA,EAAA,QAAA,UACA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAIA,EAAJ",
    "file": "main.js",
    "sourceRoot": "../src",
    "sourcesContent": [
        "let socket;\n\nfunction init(url) {\n  socket = new WebSocket(url);\n  console.log('connecting...');\n}\n\nfunction registerOpenHandler(handlerFunction) {\n  socket.onopen = function() {\n    console.log('open');\n    handlerFunction();\n  };\n}\n\nfunction registerMessageHandler(handlerFunction) {\n  socket.onmessage = (e) => {\n    console.log('message', e.data);\n    let data = JSON.parse(e.data);\n    handlerFunction(data);\n  };\n}\n\nfunction sendMessage(payload) {\n  socket.send(JSON.stringify(payload));\n}\n\nexport default {\n  init,\n  registerOpenHandler,\n  registerMessageHandler,\n  sendMessage\n}\n",
        "import socket from './ws-client';\n\nclass ChatApp {\n  constructor() {\n    socket.init('ws://localhost:3001');\n    socket.registerOpenHandler(() => {\n      let message = new ChatMessage('pow!');\n      socket.sendMessage(message.toObj());\n    });\n    socket.registerMessageHandler((data) => {\n      console.log(data);\n    });\n  }\n}\n\nclass ChatMessage {\n  constructor(data) {\n    if (typeof data === 'string') {\n      data = {\n        message: data\n      };\n    }\n    this.username = data.user || 'batman';\n    this.message = data.message;\n    this.timestamp = data.timestamp || (new Date()).getTime();\n  }\n\n  toObj() {\n    return {\n      user: this.username,\n      message: this.message,\n      timestamp: this.timestamp\n    };\n  }\n}\n\nexport default ChatApp;\n",
        "import ChatApp from './app';\nnew ChatApp();\n"
    ]
}